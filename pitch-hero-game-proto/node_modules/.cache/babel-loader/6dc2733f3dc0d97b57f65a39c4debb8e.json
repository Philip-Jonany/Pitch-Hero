{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phili\\\\Documents\\\\GitHub\\\\Pitch-Hero\\\\pitch-hero-game-proto\\\\src\\\\GameTimer.tsx\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameTimer extends Component {\n  constructor(props) {\n    super(props);\n    this.frameID = void 0;\n    this.lastFrameTime = void 0;\n    this.frameID = 0;\n    this.lastFrameTime = 0;\n  }\n\n  requestFrame() {\n    this.frameID = requestAnimationFrame(time => this.onTick(time));\n  }\n\n  componentDidMount() {\n    this.requestFrame();\n  }\n\n  componentWillUnmount() {\n    if (this.frameID !== null) cancelAnimationFrame(this.frameID);\n  }\n\n  onTick(time) {\n    let delta = (time - this.lastFrameTime) / 1000;\n    this.props.onTickCallback(delta);\n    this.props.postTickCallback(delta);\n    this.lastFrameTime = time;\n    this.requestFrame();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameTimer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default GameTimer;","map":{"version":3,"sources":["C:/Users/phili/Documents/GitHub/Pitch-Hero/pitch-hero-game-proto/src/GameTimer.tsx"],"names":["React","Component","GameTimer","constructor","props","frameID","lastFrameTime","requestFrame","requestAnimationFrame","time","onTick","componentDidMount","componentWillUnmount","cancelAnimationFrame","delta","onTickCallback","postTickCallback","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAOA,MAAMC,SAAN,SAAwBD,SAAxB,CAAsD;AAKpDE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AADsB,SAHxBC,OAGwB;AAAA,SAFxBC,aAEwB;AAEtB,SAAKD,OAAL,GAAe,CAAf;AACA,SAAKC,aAAL,GAAqB,CAArB;AACD;;AAEDC,EAAAA,YAAY,GAAG;AACb,SAAKF,OAAL,GAAeG,qBAAqB,CAAEC,IAAD,IAAkB,KAAKC,MAAL,CAAYD,IAAZ,CAAnB,CAApC;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKJ,YAAL;AACD;;AAEDK,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKP,OAAL,KAAiB,IAArB,EACEQ,oBAAoB,CAAC,KAAKR,OAAN,CAApB;AACH;;AAEDK,EAAAA,MAAM,CAACD,IAAD,EAAe;AACnB,QAAIK,KAAK,GAAG,CAACL,IAAI,GAAG,KAAKH,aAAb,IAA8B,IAA1C;AAEA,SAAKF,KAAL,CAAWW,cAAX,CAA0BD,KAA1B;AACA,SAAKV,KAAL,CAAWY,gBAAX,CAA4BF,KAA5B;AAEA,SAAKR,aAAL,GAAqBG,IAArB;AACA,SAAKF,YAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AAtCmD;;AAyCtD,eAAef,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Component } from \"react\";\r\n\r\ninterface GameTimerProps {\r\n  onTickCallback(delta: number): void,\r\n  postTickCallback(delta: number): void\r\n}\r\n\r\nclass GameTimer extends Component<GameTimerProps, {}> {\r\n\r\n  frameID: number;\r\n  lastFrameTime: number;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.frameID = 0;\r\n    this.lastFrameTime = 0;\r\n  }\r\n\r\n  requestFrame() {\r\n    this.frameID = requestAnimationFrame((time: number) => this.onTick(time))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.requestFrame();\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    if (this.frameID !== null)\r\n      cancelAnimationFrame(this.frameID);\r\n  }\r\n\r\n  onTick(time: number) {\r\n    let delta = (time - this.lastFrameTime) / 1000;\r\n\r\n    this.props.onTickCallback(delta);\r\n    this.props.postTickCallback(delta);\r\n\r\n    this.lastFrameTime = time;\r\n    this.requestFrame();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"gameTimer\"></div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameTimer;\r\n"]},"metadata":{},"sourceType":"module"}
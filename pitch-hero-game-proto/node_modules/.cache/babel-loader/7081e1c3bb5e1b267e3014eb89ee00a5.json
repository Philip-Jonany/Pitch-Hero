{"ast":null,"code":"export class GameEntity {\n  constructor(name, id, x, y) {\n    this.name = void 0;\n    this.x = void 0;\n    this.y = void 0;\n    this.id = void 0;\n    this.name = name;\n    this.x = x;\n    this.y = y;\n    this.id = id;\n  }\n\n  setX(x) {\n    this.x = x;\n  }\n\n  setY(y) {\n    this.y = y;\n  }\n\n  tick(dt) {}\n\n  draw(dt, canvas, ctx) {}\n\n  shouldRemove() {\n    return false;\n  }\n\n}\nexport class PlayerEntity extends GameEntity {\n  constructor(id, getInputFunc) {\n    super(\"player\", id, 5, 50);\n    this.getInputFunc = void 0;\n    this.getInputFunc = getInputFunc;\n  }\n\n  tick(dt) {\n    this.setY(this.getInputFunc());\n  }\n\n  draw(dt, canvas, ctx) {\n    let size = 5 / 100.0 * canvas.height;\n    let blockX = this.x / 100.0 * canvas.width;\n    let blockY = (1 - this.y / 100.0) * canvas.height;\n    ctx.fillStyle = \"red\";\n    ctx.beginPath();\n    ctx.fillRect(blockX - size / 2, blockY - size / 2, size, size);\n  }\n\n}\nexport class PipeEntity extends GameEntity {\n  constructor(id, y, width, gap) {\n    super(\"pipe\", id, 110, y);\n    this.width = void 0;\n    this.gap = void 0;\n    this.awardedPoints = void 0;\n    this.width = width;\n    this.gap = gap;\n    this.awardedPoints = false;\n  }\n\n  tick(dt) {\n    // this.setY(this.getInputFunc());\n    this.setX(this.x - dt * 10);\n  }\n\n  draw(dt, canvas, ctx) {\n    // canvas space from game space\n    let x = this.x / 100.0 * canvas.width;\n    let y = (1 - this.y / 100.0) * canvas.height;\n    let width = this.width / 100.0 * canvas.width;\n    let gap = this.gap / 100.0 * canvas.height;\n    ctx.fillStyle = \"green\"; // top\n\n    ctx.beginPath();\n    ctx.fillRect(x - width / 2, 0, width, y - gap / 2);\n    ctx.fillRect(x - width / 2, y + gap / 2, width, canvas.height);\n  }\n\n  shouldRemove() {\n    return this.x < -10;\n  }\n\n  inDangerZone(x, y) {\n    let leftEdge = this.x - this.width / 2;\n    let rightEdge = this.x + this.width / 2;\n    let topLip = this.y + this.gap / 2;\n    let bottomLip = this.y - this.gap / 2;\n    return x > leftEdge && x < rightEdge && (y > topLip || y < bottomLip);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/phili/Documents/GitHub/Pitch-Hero/pitch-hero-game-proto/src/GameEntities.tsx"],"names":["GameEntity","constructor","name","id","x","y","setX","setY","tick","dt","draw","canvas","ctx","shouldRemove","PlayerEntity","getInputFunc","size","height","blockX","width","blockY","fillStyle","beginPath","fillRect","PipeEntity","gap","awardedPoints","inDangerZone","leftEdge","rightEdge","topLip","bottomLip"],"mappings":"AAAA,OAAO,MAAMA,UAAN,CAAiB;AAMtBC,EAAAA,WAAW,CAACC,IAAD,EAAeC,EAAf,EAA2BC,CAA3B,EAAsCC,CAAtC,EAAiD;AAAA,SAL5DH,IAK4D;AAAA,SAJ5DE,CAI4D;AAAA,SAH5DC,CAG4D;AAAA,SAF5DF,EAE4D;AAC1D,SAAKD,IAAL,GAAYA,IAAZ;AACA,SAAKE,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKF,EAAL,GAAUA,EAAV;AACD;;AAEDG,EAAAA,IAAI,CAACF,CAAD,EAAY;AACd,SAAKA,CAAL,GAASA,CAAT;AACD;;AAEDG,EAAAA,IAAI,CAACF,CAAD,EAAY;AACd,SAAKA,CAAL,GAASA,CAAT;AACD;;AAEDG,EAAAA,IAAI,CAACC,EAAD,EAAa,CAAG;;AAEpBC,EAAAA,IAAI,CAACD,EAAD,EAAaE,MAAb,EAAwCC,GAAxC,EAAuE,CAAG;;AAE9EC,EAAAA,YAAY,GAAY;AAAE,WAAO,KAAP;AAAe;;AAzBnB;AA4BxB,OAAO,MAAMC,YAAN,SAA2Bd,UAA3B,CAAsC;AAG3CC,EAAAA,WAAW,CAACE,EAAD,EAAaY,YAAb,EAAyC;AAClD,UAAM,QAAN,EAAgBZ,EAAhB,EAAoB,CAApB,EAAuB,EAAvB;AADkD,SAFpDY,YAEoD;AAElD,SAAKA,YAAL,GAAoBA,YAApB;AACD;;AAEDP,EAAAA,IAAI,CAACC,EAAD,EAAa;AACf,SAAKF,IAAL,CAAU,KAAKQ,YAAL,EAAV;AACD;;AAEDL,EAAAA,IAAI,CAACD,EAAD,EAAaE,MAAb,EAAwCC,GAAxC,EAAuE;AACzE,QAAII,IAAI,GAAI,IAAI,KAAL,GAAcL,MAAM,CAACM,MAAhC;AACA,QAAIC,MAAM,GAAI,KAAKd,CAAL,GAAS,KAAV,GAAmBO,MAAM,CAACQ,KAAvC;AACA,QAAIC,MAAM,GAAG,CAAC,IAAI,KAAKf,CAAL,GAAS,KAAd,IAAuBM,MAAM,CAACM,MAA3C;AAEAL,IAAAA,GAAG,CAACS,SAAJ,GAAgB,KAAhB;AACAT,IAAAA,GAAG,CAACU,SAAJ;AACAV,IAAAA,GAAG,CAACW,QAAJ,CAAaL,MAAM,GAAGF,IAAI,GAAG,CAA7B,EAAgCI,MAAM,GAAGJ,IAAI,GAAG,CAAhD,EAAmDA,IAAnD,EAAyDA,IAAzD;AACD;;AApB0C;AAuB7C,OAAO,MAAMQ,UAAN,SAAyBxB,UAAzB,CAAoC;AAMzCC,EAAAA,WAAW,CAACE,EAAD,EAAaE,CAAb,EAAwBc,KAAxB,EAAuCM,GAAvC,EAAoD;AAC7D,UAAM,MAAN,EAActB,EAAd,EAAkB,GAAlB,EAAuBE,CAAvB;AAD6D,SAJ/Dc,KAI+D;AAAA,SAH/DM,GAG+D;AAAA,SAF/DC,aAE+D;AAE7D,SAAKP,KAAL,GAAaA,KAAb;AACA,SAAKM,GAAL,GAAWA,GAAX;AACA,SAAKC,aAAL,GAAqB,KAArB;AACD;;AAEDlB,EAAAA,IAAI,CAACC,EAAD,EAAa;AACf;AACA,SAAKH,IAAL,CAAU,KAAKF,CAAL,GAASK,EAAE,GAAG,EAAxB;AACD;;AAEDC,EAAAA,IAAI,CAACD,EAAD,EAAaE,MAAb,EAAwCC,GAAxC,EAAuE;AACzE;AACA,QAAIR,CAAC,GAAI,KAAKA,CAAL,GAAS,KAAV,GAAmBO,MAAM,CAACQ,KAAlC;AACA,QAAId,CAAC,GAAG,CAAC,IAAI,KAAKA,CAAL,GAAS,KAAd,IAAuBM,MAAM,CAACM,MAAtC;AACA,QAAIE,KAAK,GAAI,KAAKA,KAAL,GAAa,KAAd,GAAuBR,MAAM,CAACQ,KAA1C;AACA,QAAIM,GAAG,GAAI,KAAKA,GAAL,GAAW,KAAZ,GAAqBd,MAAM,CAACM,MAAtC;AAEAL,IAAAA,GAAG,CAACS,SAAJ,GAAgB,OAAhB,CAPyE,CASzE;;AACAT,IAAAA,GAAG,CAACU,SAAJ;AACAV,IAAAA,GAAG,CAACW,QAAJ,CAAanB,CAAC,GAAGe,KAAK,GAAG,CAAzB,EAA4B,CAA5B,EAA+BA,KAA/B,EAAsCd,CAAC,GAAGoB,GAAG,GAAG,CAAhD;AAEAb,IAAAA,GAAG,CAACW,QAAJ,CAAanB,CAAC,GAAGe,KAAK,GAAG,CAAzB,EAA4Bd,CAAC,GAAGoB,GAAG,GAAG,CAAtC,EAAyCN,KAAzC,EAAgDR,MAAM,CAACM,MAAvD;AACD;;AAEDJ,EAAAA,YAAY,GAAY;AACtB,WAAO,KAAKT,CAAL,GAAS,CAAC,EAAjB;AACD;;AAEDuB,EAAAA,YAAY,CAACvB,CAAD,EAAYC,CAAZ,EAAgC;AAC1C,QAAIuB,QAAQ,GAAG,KAAKxB,CAAL,GAAS,KAAKe,KAAL,GAAa,CAArC;AACA,QAAIU,SAAS,GAAG,KAAKzB,CAAL,GAAS,KAAKe,KAAL,GAAa,CAAtC;AACA,QAAIW,MAAM,GAAG,KAAKzB,CAAL,GAAS,KAAKoB,GAAL,GAAW,CAAjC;AACA,QAAIM,SAAS,GAAG,KAAK1B,CAAL,GAAS,KAAKoB,GAAL,GAAW,CAApC;AACA,WAAOrB,CAAC,GAAGwB,QAAJ,IAAgBxB,CAAC,GAAGyB,SAApB,KAAkCxB,CAAC,GAAGyB,MAAJ,IAAczB,CAAC,GAAG0B,SAApD,CAAP;AACD;;AA5CwC","sourcesContent":["export class GameEntity {\r\n  name: string;  \r\n  x: number;\r\n  y: number;\r\n  id: number;\r\n\r\n  constructor(name: string, id: number, x: number, y: number) {\r\n    this.name = name;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.id = id;\r\n  }\r\n\r\n  setX(x: number) {\r\n    this.x = x;\r\n  }\r\n\r\n  setY(y: number) {\r\n    this.y = y;\r\n  }\r\n\r\n  tick(dt: number) { }\r\n\r\n  draw(dt: number, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) { }\r\n\r\n  shouldRemove(): boolean { return false; }\r\n}\r\n\r\nexport class PlayerEntity extends GameEntity {\r\n  getInputFunc: () => number;\r\n\r\n  constructor(id: number, getInputFunc: () => number) {\r\n    super(\"player\", id, 5, 50);\r\n    this.getInputFunc = getInputFunc;\r\n  }\r\n\r\n  tick(dt: number) { \r\n    this.setY(this.getInputFunc());\r\n  }\r\n\r\n  draw(dt: number, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    let size = (5 / 100.0) * canvas.height;\r\n    let blockX = (this.x / 100.0) * canvas.width;\r\n    let blockY = (1 - this.y / 100.0) * canvas.height;\r\n\r\n    ctx.fillStyle = \"red\";\r\n    ctx.beginPath();\r\n    ctx.fillRect(blockX - size / 2, blockY - size / 2, size, size);\r\n  }\r\n}\r\n\r\nexport class PipeEntity extends GameEntity {\r\n  \r\n  width: number;\r\n  gap: number;\r\n  awardedPoints: boolean\r\n\r\n  constructor(id: number, y: number, width: number, gap: number) {\r\n    super(\"pipe\", id, 110, y);\r\n    this.width = width;\r\n    this.gap = gap;\r\n    this.awardedPoints = false;\r\n  }\r\n\r\n  tick(dt: number) { \r\n    // this.setY(this.getInputFunc());\r\n    this.setX(this.x - dt * 10);\r\n  }\r\n\r\n  draw(dt: number, canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\r\n    // canvas space from game space\r\n    let x = (this.x / 100.0) * canvas.width;\r\n    let y = (1 - this.y / 100.0) * canvas.height;\r\n    let width = (this.width / 100.0) * canvas.width;\r\n    let gap = (this.gap / 100.0) * canvas.height;\r\n\r\n    ctx.fillStyle = \"green\";\r\n\r\n    // top\r\n    ctx.beginPath();\r\n    ctx.fillRect(x - width / 2, 0, width, y - gap / 2);\r\n\r\n    ctx.fillRect(x - width / 2, y + gap / 2, width, canvas.height);\r\n  }\r\n\r\n  shouldRemove(): boolean {\r\n    return this.x < -10;\r\n  }\r\n\r\n  inDangerZone(x: number, y: number): boolean {\r\n    let leftEdge = this.x - this.width / 2;\r\n    let rightEdge = this.x + this.width / 2;\r\n    let topLip = this.y + this.gap / 2;\r\n    let bottomLip = this.y - this.gap / 2;\r\n    return x > leftEdge && x < rightEdge && (y > topLip || y < bottomLip);\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}